---
title: "ROSA Project Tracker"
# author: "Cobblepot Analytics"
format: 
  dashboard:
    nav-buttons: [linkedin, twitter, github]
---

<!--#library set-up=============================================================
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#content in this section should be removed if in production - ok for dev -->
```{r echo=FALSE, message=FALSE, msg = F, warning = F, error = F}
library(gauntlet)
library(magrittr)
library(tidyverse, quietly = TRUE)

package_load_q = purrr::quietly(gauntlet::package_load)

tmp = c("tibble", "tidyverse", "magrittr","gauntlet", "targets"
        ,"bosFunctions"
        ,"reactable", "reactablefmtr", "crosstalk", "plotly", "bslib","bsicons", "htmltools") %>% 
  package_load_q()
```

<!--#source helpers/utilities===================================================
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#content in this section should be removed if in production - ok for dev -->
```{r}
# setwd(here::here())
table_height = 500

source(here::here("code/helpers_skankey.R"))

rctble_format_table = function(rctble_object
                               ,compact = T
                               ,defaultPageSize = 1000
                               ,highlight = T
                               ,filterable = T
                               ,fullWidth = T
                               ,striped = T
                               ,resizable = T){
  
  rctble_object$x$tag$attribs$compact = compact
  rctble_object$x$tag$attribs$defaultPageSize = defaultPageSize
  rctble_object$x$tag$attribs$highlight = highlight
  rctble_object$x$tag$attribs$filterable = filterable
  rctble_object$x$tag$attribs$fullWidth = fullWidth
  # rctble_object$x$tag$attribs$wrap = wrap #needs to be issued in reactable() function
  rctble_object$x$tag$attribs$striped = striped
  rctble_object$x$tag$attribs$resizable = resizable
  
  return(rctble_object)
  
}

rtrn_cols = function(data, words, pretty = T, exclude = F, sort = T){
  colnames = colnames(data)

  if (!exclude){
    if (pretty){
      cols_index = colnames[str_detect(colnames, words)] %>%
        gauntlet::strg_pretty_char()
    } else {
      cols_index = colnames[str_detect(colnames, words)]
    }
  } else {
    if (pretty){
      cols_index = colnames[!str_detect(colnames, words)] %>%
        gauntlet::strg_pretty_char()
    } else {
      cols_index = colnames[!str_detect(colnames, words)]
    }
  }
  
  if (sort){cols_index = sort(cols_index)}
  
  return(cols_index)
  
}

```

```{r}
setwd(here::here())
tar_load(viz_prj_timeline)
tar_load(data_current_pro)
tar_load(data_needed_pro)
tar_load(data_acro_list_pro)
tar_load(data_def_terms_pro)
tar_load(data_references_pro)
tar_load(data_needProj_gap)
tar_load(data_current_needed)

tar_load(viz_tble_agg_needs_animal_cmplt)
```

# Current Projects

## Quarto {height="20%"}

::: card
Basic introduction or brief overview of this page. Here is a link to ROSA website <https://www.rosascience.org/>.
:::

```{r}
#| component: valuebox
#| title: "Number of Projects"

list(
  # icon = "calendar",
  color = "yellow",
  value = nrow(data_current_pro)
)
```

```{r}
#| component: valuebox
#| title: "Value Box Example"

list(
  icon = "calendar",
  color = "yellow",
  value = (100*round(nrow(data_current_pro[data_current_pro$status_of_research == "Complete", ])/nrow(data_current_pro), 2)) %>% 
    paste0(., "%")
)
```

## Test

```{r}
data_current_pro %>% 
  reactable(
    defaultColDef = colDef(footerStyle = list(fontWeight = "bold"))
    ,elementId = stringr::str_glue("yolo")
  ) %>% 
  rctble_format_table()
```

```{r}
#| title: "Current Project Timeland"
viz_prj_timeline
```

# Research Needs Gap Analysis

## Row {height=100%}

```{r}
data_needProj_gap %>% 
  mutate(Total = pmap_dbl(select(., !contains("research")), sum) %>% 
           as.integer()) %>% 
  rename_with(pretty_char) %>% 
  # glimpse()
  reactable(
    defaultColDef = colDef(footerStyle = list(fontWeight = "bold"))
    ,groupBy = c("Research Category")
    ,columns = combined_named_lists(
      colDef_agg(cols = c(
        "Adequately Addressed", "Partially Addressed"
        ,"Not Addressed", "Missing Data", 'Total'), rm_footer = T)
      ,colDef_sticky(col = rtrn_cols(data_needProj_gap, "research", T), side = "right")
      ,colDef_minwidth(cols = rtrn_cols(data_needProj_gap, "research", T), width = 150)
      # ,colDef_colorScales(cols = c("Total"))
    )
    ,wrap = T
  )


```

<!-- ::: card -->
<!-- `r setwd(here::here())` -->

<!-- `r getwd()` -->
<!-- ::: -->

```{r}
bslib::value_box(
  title = "I got",
  value = mtcars[1:3, ],
  showcase = bs_icon("music-note-beamed"),
  p("bslib ain't one", bs_icon("emoji-smile")),
  p("hit me", bs_icon("suit-spade"))
)
```


```{r}
temp_1 = data_current_needed %>% 
  count_percent_zscore(
    grp_c = c("research_category", "research_need_id", "animal_group")
    ,grp_p = c("research_category", "research_need_id")
    ,col = count
    ,rnd = 2
  ) %>% 
  group_by(research_category) %>%
  complete(research_need_id, animal_group, fill = list(count = 0, percent = 0)) %>%
  ungroup() %>%
    group_by(research_need_id) %>% 
  mutate(total = sum(count)) %>% 
  ungroup() %>% 
  select(!c(count)) %>%
  pivot_wider(names_from = animal_group, values_from = percent) 

reactable(
  temp_1 %>% rename_with(gauntlet::strg_pretty_char)
  ,defaultColDef = colDef(footerStyle = list(fontWeight = "bold"))
  ,columns = combined_named_lists(
    colDef_colorScales(temp_1, cols = rtrn_cols(temp_1, "research|total", exclude = T)
                       ,colors = c("#15607A", "#FA8C00"), rev = T)
  ),
  columnGroups = list(
    colGroup(name = "Percent of Projects by Studied Animal", columns = rtrn_cols(temp_1, "research|total", exclude = T))
  ), wrap = F
) %>% 
  rctble_format_table()




tmp = projects_linked %>%
  count_percent_zscore(
    grp_c = c("research_category", "research_need_id", "completeion_status", "animal_group")
    ,grp_p = c("research_category", "research_need_id", "animal_group")
    ,col = count, rnd = 2
  ) %>% 
  select(!c(percent)) %>% 
  pivot_wider(values_from = "count"
              ,names_from = 'completeion_status'
              ,values_fill = 0) %>% 
  mutate(
    total = pmap_dbl(
      select(., contains("Complete")), sum)
    ,percent_complete = round(Complete/total
                                        ,2)) %>% 
  group_by(research_need_id) %>% 
  mutate(
    needs_total = sum(total)
    ,needs_completed = sum(Complete)
    ,needs_percent_completed = round(needs_completed/needs_total, 2)
  ) %>% 
  ungroup() %>% 
  select("research_category", "research_need_id", "animal_group", "Not Complete"
         ,"Complete", "total", "percent_complete" 
         ,"needs_completed","needs_total", "needs_percent_completed")
  # mutate(label = str_glue("{research_need_id}\nTotal Projects: {total_projects}\nTotal Comp: {total_completed_projects} ({100*`total_completed_percent`}%)\nTotal (animal grp): {animal_group_total}\nTotal Comp (animal grp) ({100*animal_group_total_percent}%)")) #%>%
  # # filter(research_need_id == "RN-83")


reactable(
  tmp %>% 
    rename_with(gauntlet::strg_pretty_char) %>% 
    dplyr::select(!c(`Not Complete`))
  ,defaultColDef = colDef(footerStyle = list(fontWeight = "bold"))
  # ,columns = combined_named_lists(
  #   colDef_colorScales(tmp, cols = rtrn_cols(tmp, "needs_count", exclude = F)
  #                      ,colors = c("#15607A", "#FA8C00"), rev = T)
  # )
  ,columnGroups = list(
    colGroup(name = "Research Need/Animal Group Projects"
             ,columns = c('Complete', 'Total', 'Percent Complete'))
    ,colGroup(name = "Research Need"
             ,columns = c("Needs Completed", "Needs Total", "Needs Percent Completed"))
  ), wrap = T
) %>% 
  rctble_format_table()









tmp %>% 
  plot_ly(
    x = ~animal_group_total_percent, y = ~research_need_id, color = ~animal_group
    ,text = ~label, hoverinfo = "text", type = "bar"
  ) %>%  
  layout(yaxis = list(title = 'Count'), barmode = 'stack')



%>% 
  filter(completeion_status != "Complete")

projects_linked %>% 
  select(!count) %>% 
  rename_with(strg_pretty_char) %>% 
  reactable()

links = projects_linked %>% 
  # head(50) %>% 
  # filter(research_need_id == "RN-5") %>%
    # filter(current_projects == "Ex-1") %>%
  make_links(from = "current_projects",  to = 'research_need_id')

nodes = make_nodes(links) 

links_m = merge_link_node(links, nodes) %>% 
  mutate(value = 1)

plot_ly(
  type = "sankey",
  orientation = "h",
  node = list(
    label = nodes$name
    # color = c("blue", "blue", "blue", "blue", "blue", "blue"),
    ,pad = 15
    ,thickness = 20
    ,line = list(
      color = "black",
      width = 0.5
    ))
  ,link = list(
    source = links_m$source
    ,target = links_m$target
    ,value =  links_m$value
  )
)
```

# Raw Data 

## {.tabset}

```{r}
#| title: Current Projects

id = "current_projects"
reactable(
  data_current_pro %>% rename_with(strg_pretty_char)
  ,columns = combined_named_lists(
    # colDef_agg(cols = c(as.character(1:28), 'Grand Total'), rm_footer = T)
    colDef_urlLink(cols = rtrn_cols(data_current_pro, "website"), link_text = "Link to site")
    ,colDef_sticky(col = "Research Project Id Number", side = "right"))
  ,defaultColDef = colDef(footerStyle = list(fontWeight = "bold"))
  ,wrap = F
  ,elementId = id
) %>% 
  rctble_format_table() %>% 
  rctble_add_download(., id = id)
```

```{r}
#| title: Identified Needed Projects 
reactable(data_needed_pro)
```

```{r}
#| title: Acronyms List
reactable(data_acro_list_pro)
```

```{r}
#| title: Terms Definition
reactable(data_def_terms_pro)
```

```{r}
#| title: References
reactable(data_references_pro)
```

## {-}




















